[
    {
        "id": "e59b8a9c7eab3c4f",
        "type": "tab",
        "label": "ADC HAT rev 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ca5f7c412c73f22f",
        "type": "debug",
        "z": "e59b8a9c7eab3c4f",
        "name": "First",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 440,
        "wires": []
    },
    {
        "id": "2ce352ba1b84af1a",
        "type": "function",
        "z": "e59b8a9c7eab3c4f",
        "name": "Set Broadcast ip",
        "func": "//important note  my network is 512  devices so x.x.0.x \n//and x.x.1.x are all on the same network. since the slave is on x.x.1.x and \n// the master is on x.x.0.x I the  broadcast Ip is changed\n// as shown in line 8. Change the .slice to  suit your network.\n// for example slice(0,9) + \"255\" if the second to last ip is 1 digit.\n//If your network has 2 digits for the second to last ip segment\n// use .slice(0,10) +\"255\"  \n\nvar device1= flow.get('device1') || {};\nvar str=msg.payload.internalIPv4;\nvar newstring = str.slice(0,7) + \"1.255\";\nvar newMsg2 = {payload:device1};\n//var msg3 = {payload:device1.type};\nvar msg3 = {payload:\"Searching\"};\nnewMsg2.ip = newstring;\nreturn[ newMsg2, msg3];\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 440,
        "wires": [
            [
                "e7bc7490441e81fb",
                "7b2944dcc4913c3e"
            ],
            [
                "4155e76ff4822423"
            ]
        ]
    },
    {
        "id": "463468b3400d8173",
        "type": "debug",
        "z": "e59b8a9c7eab3c4f",
        "name": "Second",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 560,
        "wires": []
    },
    {
        "id": "2036ed4f3d9e87fb",
        "type": "udp out",
        "z": "e59b8a9c7eab3c4f",
        "name": "Broadcast to find device",
        "addr": "",
        "iface": "",
        "port": "5044",
        "ipv": "udp4",
        "outport": "5044",
        "base64": false,
        "multicast": "broad",
        "x": 950,
        "y": 500,
        "wires": []
    },
    {
        "id": "693504c24d57dd2f",
        "type": "ui_form",
        "z": "e59b8a9c7eab3c4f",
        "name": "Add new device",
        "label": "",
        "group": "7141e1a989b5bb01",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Type",
                "value": "type",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "type": ""
        },
        "payload": "",
        "submit": "FIND DEVICE",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "f2d33d665f680f2f",
                "1a4a98e1720ce2e3",
                "c4729139a86beef5"
            ]
        ]
    },
    {
        "id": "4155e76ff4822423",
        "type": "ui_text",
        "z": "e59b8a9c7eab3c4f",
        "group": "7141e1a989b5bb01",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Display device add info looking for",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 960,
        "y": 280,
        "wires": []
    },
    {
        "id": "1a4a98e1720ce2e3",
        "type": "function",
        "z": "e59b8a9c7eab3c4f",
        "name": "Save add device type/name",
        "func": "var device1= flow.get('device1') || {};\ndevice1={type:\"ADC1\",ip:\"0.0.0.0\",name:\"new module\",category:\"init\",ch0:0,ch1:0,ch2:0,ch3:0,ch4:0,ch5:0,out1:0,out2:0,out3:0,link:\"down\"};\ndevice1.category=\"init\";\ndevice1.name =msg.payload.name;\ndevice1.type = msg.payload.type;\nflow.set('device1', device1);\nmsg.payload = \"Looking for an \" + device1.type;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "4751e57ddbc513cd",
        "type": "udp in",
        "z": "e59b8a9c7eab3c4f",
        "name": "Receive from remote device after it is found",
        "iface": "",
        "port": "5045",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 160,
        "y": 740,
        "wires": [
            [
                "364ec04e216522bd",
                "4530747e534ebcb1"
            ]
        ]
    },
    {
        "id": "626c425937e3916a",
        "type": "debug",
        "z": "e59b8a9c7eab3c4f",
        "name": "UDP Receive",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 700,
        "wires": []
    },
    {
        "id": "f2d33d665f680f2f",
        "type": "ip",
        "z": "e59b8a9c7eab3c4f",
        "name": "get local ip",
        "https": false,
        "timeout": "5000",
        "internalIPv4": true,
        "internalIPv6": false,
        "publicIPv4": false,
        "publicIPv6": false,
        "x": 390,
        "y": 440,
        "wires": [
            [
                "c6563eff1d87d2f5"
            ]
        ]
    },
    {
        "id": "b8eb77886849ce84",
        "type": "comment",
        "z": "e59b8a9c7eab3c4f",
        "name": "UDp Ports",
        "info": "master output port 5044 device receive port 5044\nmaster receive port 5045 device send port 5045",
        "x": 380,
        "y": 280,
        "wires": []
    },
    {
        "id": "364ec04e216522bd",
        "type": "change",
        "z": "e59b8a9c7eab3c4f",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "payload",
                "fromt": "msg",
                "to": "ip",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 640,
        "wires": [
            [
                "ad81516abf8236fc"
            ]
        ]
    },
    {
        "id": "e5e573c0b0158213",
        "type": "debug",
        "z": "e59b8a9c7eab3c4f",
        "name": "UDP sender IP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 600,
        "wires": []
    },
    {
        "id": "874977b49a94df0d",
        "type": "ui_text",
        "z": "e59b8a9c7eab3c4f",
        "group": "7141e1a989b5bb01",
        "order": 1,
        "width": "5",
        "height": "3",
        "name": "Form help text",
        "label": "",
        "format": "To add a device, choose a name and set the type to ADC1. The master will search the local network to find the device.",
        "layout": "row-left",
        "className": "",
        "x": 140,
        "y": 380,
        "wires": []
    },
    {
        "id": "ad81516abf8236fc",
        "type": "function",
        "z": "e59b8a9c7eab3c4f",
        "name": "Extract sender ip from received msg",
        "func": "var device1= flow.get('device1') || {};\ndevice1.ip = msg.ip;\nif(device1.link != \"up\"){\n    msg= {payload : \"Found \" + device1.type + \" at \" + device1.ip }\n    return msg;\n}\n// if adc1 found and ip link is now active or up\nif((msg.ip != \"0.0.0.0\") &&(device1.type=== \"ADC1\"))\n{\n    device1.link=\"up\";\n    msg={payload:null};\n}\nflow.set('device1', device1);\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 660,
        "wires": [
            [
                "220469e09632179a",
                "04f8ec3549137981"
            ]
        ]
    },
    {
        "id": "220469e09632179a",
        "type": "ui_text",
        "z": "e59b8a9c7eab3c4f",
        "group": "7141e1a989b5bb01",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "found",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1190,
        "y": 660,
        "wires": []
    },
    {
        "id": "416eeb38667d71c5",
        "type": "udp out",
        "z": "e59b8a9c7eab3c4f",
        "name": "UDP Send",
        "addr": "",
        "iface": "",
        "port": "5044",
        "ipv": "udp4",
        "outport": "5044",
        "base64": false,
        "multicast": "false",
        "x": 2290,
        "y": 1040,
        "wires": []
    },
    {
        "id": "4530747e534ebcb1",
        "type": "json",
        "z": "e59b8a9c7eab3c4f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 420,
        "y": 820,
        "wires": [
            [
                "15c09e61d495846c"
            ]
        ]
    },
    {
        "id": "15c09e61d495846c",
        "type": "function",
        "z": "e59b8a9c7eab3c4f",
        "name": "Extract data from received  UDP messages",
        "func": "var device1= flow.get('device1') || {};\nvar msg0,msg1,msg2,msg3,msg4,msg5;\nif(msg.payload.type == device1.type)\n{\n    device1.ch0 =msg.payload.ch0;\n    msg0 ={payload: msg.payload.ch0 };\n    device1.ch1 =msg.payload.ch1;\n    msg1 ={payload: msg.payload.ch1 };\n    device1.ch2 =msg.payload.ch2;\n    msg2 ={payload: msg.payload.ch2 };\n    device1.ch3 =msg.payload.ch3;\n    msg3 ={payload: msg.payload.ch3 };\n    device1.ch4 =msg.payload.ch4;\n    msg4 ={payload: msg.payload.ch4 };\n    device1.ch5 =msg.payload.ch5;\n    msg5 ={payload: msg.payload.ch5 };\n    \n    flow.set('device1', device1);\n}\nmsg6 = {payload: device1.name};// used to display name\nreturn [msg0,msg1,msg2,msg3,msg4,msg5,msg6];\n\n//==================\n/*device1={type:\"ADC1\",\nip:\"0.0.0.0\",\nname:\"new module\",\nch0:0,\nch1:0,\nch2:0,\nch3:0,\nch4:0,\nch5:0,\nout1:0,\nout2:0,\nout3:0\n};\n*/\n//========================\n",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 820,
        "wires": [
            [
                "03057cc04bd34a0c"
            ],
            [
                "9fb3a21e98116653"
            ],
            [
                "89d757d83ca345e6"
            ],
            [
                "b80a626977692b2c"
            ],
            [
                "b6d34173b1e68a45"
            ],
            [
                "dbcda7711ea2214d"
            ],
            [
                "b64251c378afb7ee"
            ]
        ]
    },
    {
        "id": "03057cc04bd34a0c",
        "type": "ui_text",
        "z": "e59b8a9c7eab3c4f",
        "group": "4a3c9c32.fcb034",
        "order": 2,
        "width": "4",
        "height": "1",
        "name": "Dispaly adc ch0",
        "label": "ADC ch0 mV",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1120,
        "y": 780,
        "wires": []
    },
    {
        "id": "9fb3a21e98116653",
        "type": "ui_text",
        "z": "e59b8a9c7eab3c4f",
        "group": "4a3c9c32.fcb034",
        "order": 3,
        "width": "4",
        "height": "1",
        "name": "Dispaly adc ch1",
        "label": "ADC ch1 mV",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1120,
        "y": 820,
        "wires": []
    },
    {
        "id": "3d8a5f729456e107",
        "type": "inject",
        "z": "e59b8a9c7eab3c4f",
        "name": "clear display",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 590,
        "y": 280,
        "wires": [
            [
                "4155e76ff4822423"
            ]
        ]
    },
    {
        "id": "04f8ec3549137981",
        "type": "change",
        "z": "e59b8a9c7eab3c4f",
        "name": "Clear looking for adc display",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 540,
        "wires": [
            [
                "4155e76ff4822423"
            ]
        ]
    },
    {
        "id": "f10185d6aef44468",
        "type": "inject",
        "z": "e59b8a9c7eab3c4f",
        "name": "clear display",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 850,
        "y": 720,
        "wires": [
            [
                "220469e09632179a"
            ]
        ]
    },
    {
        "id": "e7bc7490441e81fb",
        "type": "change",
        "z": "e59b8a9c7eab3c4f",
        "name": "Clear previous ip display",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 380,
        "wires": [
            [
                "220469e09632179a"
            ]
        ]
    },
    {
        "id": "c4729139a86beef5",
        "type": "change",
        "z": "e59b8a9c7eab3c4f",
        "name": "Clear previous  display",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 980,
        "wires": [
            [
                "03057cc04bd34a0c",
                "9fb3a21e98116653",
                "89d757d83ca345e6",
                "b80a626977692b2c",
                "b6d34173b1e68a45",
                "dbcda7711ea2214d"
            ]
        ]
    },
    {
        "id": "b64251c378afb7ee",
        "type": "ui_text",
        "z": "e59b8a9c7eab3c4f",
        "group": "4a3c9c32.fcb034",
        "order": 1,
        "width": "4",
        "height": "2",
        "name": "Dispaly name",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1120,
        "y": 740,
        "wires": []
    },
    {
        "id": "b5847d2b448a4d6d",
        "type": "comment",
        "z": "e59b8a9c7eab3c4f",
        "name": "tbd",
        "info": "tbd channel 5\n",
        "x": 590,
        "y": 1060,
        "wires": []
    },
    {
        "id": "c869f388a7527f93",
        "type": "ui_switch",
        "z": "e59b8a9c7eab3c4f",
        "name": "",
        "label": "Ch 0",
        "tooltip": "",
        "group": "ea6e9bbec169f855",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "ch0",
        "topicType": "str",
        "style": "",
        "onvalue": "100",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "99",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1670,
        "y": 760,
        "wires": [
            [
                "71d30a4369e5147e"
            ]
        ]
    },
    {
        "id": "2a2b042d6eb7394c",
        "type": "ui_switch",
        "z": "e59b8a9c7eab3c4f",
        "name": "",
        "label": "Ch 1",
        "tooltip": "",
        "group": "ea6e9bbec169f855",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "ch1",
        "topicType": "str",
        "style": "",
        "onvalue": "100",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "99",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1670,
        "y": 820,
        "wires": [
            [
                "71d30a4369e5147e"
            ]
        ]
    },
    {
        "id": "98c3eb3b51bd84bb",
        "type": "ui_switch",
        "z": "e59b8a9c7eab3c4f",
        "name": "",
        "label": "Ch 4",
        "tooltip": "",
        "group": "ea6e9bbec169f855",
        "order": 6,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "ch4",
        "topicType": "str",
        "style": "",
        "onvalue": "100",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "99",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1670,
        "y": 1000,
        "wires": [
            [
                "71d30a4369e5147e"
            ]
        ]
    },
    {
        "id": "32ed194ec4ed7280",
        "type": "ui_switch",
        "z": "e59b8a9c7eab3c4f",
        "name": "",
        "label": "Ch 3",
        "tooltip": "",
        "group": "ea6e9bbec169f855",
        "order": 5,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "ch3",
        "topicType": "str",
        "style": "",
        "onvalue": "100",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "99",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1670,
        "y": 940,
        "wires": [
            [
                "71d30a4369e5147e"
            ]
        ]
    },
    {
        "id": "d04bf78c7c60e022",
        "type": "ui_text",
        "z": "e59b8a9c7eab3c4f",
        "group": "ea6e9bbec169f855",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Enable ADC Channels 0 to 4",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1700,
        "y": 720,
        "wires": []
    },
    {
        "id": "71d30a4369e5147e",
        "type": "function",
        "z": "e59b8a9c7eab3c4f",
        "name": "Format enable/disable messages",
        "func": "var configMsg= flow.get('configMsg') || {};\nvar device1= flow.get('device1') || {};\nconfigMsg.type=device1.type;\nconfigMsg.name = device1.name;\nif(msg.topic == \"ch0\"){\n    configMsg.ench0 =msg.payload;\n}\nif(msg.topic == \"ch1\"){\n    configMsg.ench1 =msg.payload;\n}\nif(msg.topic == \"ch2\"){\n    configMsg.ench2 =msg.payload;\n}\nif(msg.topic == \"ch3\"){\n    configMsg.ench3 =msg.payload;\n}\nif(msg.topic == \"ch4\"){\n    configMsg.ench4 =msg.payload;\n}\n//if(msg.topic == \"ch5\"){\n  //  configMsg.ench5 =msg.payload;\n//}\nif(msg.topic === \"delay\"){\n    configMsg.delay =msg.payload;\n}\n\nflow.set('configMsg', configMsg);\n//if( msg.topic== \"send\")\n//{\n     msg.payload = configMsg;\n    return msg;\n//}\n   \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 900,
        "wires": [
            [
                "a05b9f0112cfaffa"
            ]
        ]
    },
    {
        "id": "01a8e40c51456e21",
        "type": "ui_switch",
        "z": "e59b8a9c7eab3c4f",
        "name": "",
        "label": "Ch 2",
        "tooltip": "",
        "group": "ea6e9bbec169f855",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "ch2",
        "topicType": "str",
        "style": "",
        "onvalue": "100",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "99",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1670,
        "y": 880,
        "wires": [
            [
                "71d30a4369e5147e"
            ]
        ]
    },
    {
        "id": "89d757d83ca345e6",
        "type": "ui_text",
        "z": "e59b8a9c7eab3c4f",
        "group": "4a3c9c32.fcb034",
        "order": 4,
        "width": "4",
        "height": "1",
        "name": "Dispaly adc ch2",
        "label": "ADC ch2 mV",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1120,
        "y": 860,
        "wires": []
    },
    {
        "id": "b80a626977692b2c",
        "type": "ui_text",
        "z": "e59b8a9c7eab3c4f",
        "group": "4a3c9c32.fcb034",
        "order": 5,
        "width": "4",
        "height": "1",
        "name": "Dispaly adc ch3",
        "label": "ADC ch3 mV",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1120,
        "y": 900,
        "wires": []
    },
    {
        "id": "b6d34173b1e68a45",
        "type": "ui_text",
        "z": "e59b8a9c7eab3c4f",
        "group": "4a3c9c32.fcb034",
        "order": 6,
        "width": "4",
        "height": "1",
        "name": "Dispaly adc ch4",
        "label": "ADC ch4 mV",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1120,
        "y": 940,
        "wires": []
    },
    {
        "id": "dbcda7711ea2214d",
        "type": "ui_text",
        "z": "e59b8a9c7eab3c4f",
        "group": "4a3c9c32.fcb034",
        "order": 7,
        "width": "4",
        "height": "1",
        "name": "Dispaly adc ch5",
        "label": "ch5 TBD",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1120,
        "y": 980,
        "wires": []
    },
    {
        "id": "2c1e7ffe5bd40896",
        "type": "comment",
        "z": "e59b8a9c7eab3c4f",
        "name": "device object definition",
        "info": "device object is defined here\nall elevant charasteristics are in the object.\nThe object is encoded in json for transmission.",
        "x": 440,
        "y": 480,
        "wires": []
    },
    {
        "id": "42f114f705309445",
        "type": "function",
        "z": "e59b8a9c7eab3c4f",
        "name": "Add destination ip",
        "func": "var device1= flow.get('device1') || {};\n//msg.payload = device1;\nmsg.ip = device1.ip;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 1000,
        "wires": [
            [
                "7634a443ab914a13",
                "416eeb38667d71c5"
            ]
        ]
    },
    {
        "id": "7634a443ab914a13",
        "type": "debug",
        "z": "e59b8a9c7eab3c4f",
        "name": "UDP send",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2260,
        "y": 960,
        "wires": []
    },
    {
        "id": "55a716d91a1ee918",
        "type": "ui_button",
        "z": "e59b8a9c7eab3c4f",
        "name": "",
        "group": "7141e1a989b5bb01",
        "order": 5,
        "width": "3",
        "height": "2",
        "passthru": false,
        "label": "RESET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "RESET",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 560,
        "wires": [
            [
                "14ce8412e340fd12"
            ]
        ]
    },
    {
        "id": "14ce8412e340fd12",
        "type": "function",
        "z": "e59b8a9c7eab3c4f",
        "name": "RESET",
        "func": "var device1= flow.get('device1') || {};\ndevice1={type:\"ADC1\",\nip:\"0.0.0.0\",\nname:\"new module\",\nch0:0,\nch1:0,\nch2:0,\nch3:0,\nch4:0,\nch5:0,\nout1:0,\nout2:0,\nout3:0,\nlink:\"down\"\n};\nflow.set('device1', device1);\nmsg.payload =\"\";\nreturn msg;\n/*\nmessageOutput=flow.get('messageOutput');\nvar msgtype1hex =flow.get('msgtype1hex')|| \"1\";      // index 1\nvar netname3hex =flow.get('netname3hex') || \"001\";        //index 2\nvar group3hex   =flow.get('group3hex') || \"001\";        // index 5\nvar uvintensity3hex =flow.get('uvintensity3hex') || \"064\" ;     //index 8\nvar intensity27003hex =flow.get('intensity27003hex') || \"000\" ;     // index 11\nvar intensity65003hex=flow.get('intensity65003hex')  || \"000\" ;   // index 14  last } index 17\nvar warmCool = flow.get('warmCool') || -100;\nvar intensity27 = flow.get('intensity27') || 50;\nvar intensity65 = flow.get('intensity65') || 0;\nvar savedIntensity = flow.get('savedIntensity') || 0;\n\nif (msg.topic == \"intensity\"){\n    savedIntensity = msg.payload;\n    flow.set('savedIntensity',savedIntensity);\n}\nif (flow.get(\"enable_ir_osp\") == null) flow.set(\"enable_ir_osp\", true);\nvar local=context.get('data') || {};\nif (local.count===undefined)//test exists\n{\n  local.count=0;\n}\nlocal.count +=1;\nmsg.payload=\"F2 \"+msg.payload+\" \"+local.count;\ncontext.set('data',local);\nreturn msg;\n\n\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 580,
        "wires": [
            [
                "220469e09632179a",
                "4155e76ff4822423"
            ]
        ]
    },
    {
        "id": "7b2944dcc4913c3e",
        "type": "json",
        "z": "e59b8a9c7eab3c4f",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 750,
        "y": 500,
        "wires": [
            [
                "2036ed4f3d9e87fb"
            ]
        ]
    },
    {
        "id": "fb67f8d50c7356f5",
        "type": "ui_template",
        "z": "e59b8a9c7eab3c4f",
        "group": "54d0f132c980d931",
        "name": "Documentation",
        "order": 0,
        "width": "6",
        "height": "10",
        "format": "<div> <h2>Step 1 </h2>\n<p>Power up the Raspberry PI 6 Cnannel ESP32 ADC and configure as a client on the local network.</p>\n<p> <h2>Step 2  </h2></p>\n<p>In the ADD DEVICE tab, give your device a unique name and a type = ADC1 (This is the only supported type for now)<br>\nThen press the \"Find Device\"  button. The \"get local ip\" node will use the local ip to<br>\nbroadcast a UDP message with type = ADC1 in it. When the ESP32 ADC receives the message,<br>\nit extracts the ip and uses it to send back the conversion. When this message is received, the ADC is found\nby the Raspberry Pi.</p><br>\n<p>The device data is stored in the \"device1\" flow object. The device configuration is stored in the configMsg flow object.</p>\n<p>The values are displayed in the HOME tab.</p><br>\n<p>In the SETTINGS tab, each button send a message to enable or disable a channel.</p><br>\n<p>The \"mSec between conversions\" sets the delay between burst of conversions (0 to max 4,294,967,295).</p><br>\n<p>Fewer enabled channels =  faster conversions.</p><br>\n<p>The ESP32 send conversion results every \"INTERVAL_4\" which is set to 9000mSec in the ESP32 code.</p><br>\n<p>Raspberry Pi UDP send port= 5044, ESP32 device receive port= 5044.</p><br>\n<p>Raspberry Pi UDP receive port= 5045, ESP32 device send port= 5045.</p><br>\n<p>At reset all channels are ebabled.</p><br>\n<p>Channel 5  is ADC2 channel 0 and is not yet implemented. This channel is not active while\nthe ESP32 Wi-Fi is active.</p><br>\n\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 240,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "a05b9f0112cfaffa",
        "type": "json",
        "z": "e59b8a9c7eab3c4f",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 2290,
        "y": 840,
        "wires": [
            [
                "42f114f705309445"
            ]
        ]
    },
    {
        "id": "c776484bce57cdf2",
        "type": "inject",
        "z": "e59b8a9c7eab3c4f",
        "name": "ADC chan enable Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "ch0",
        "payload": "100",
        "payloadType": "num",
        "x": 1420,
        "y": 760,
        "wires": [
            [
                "c869f388a7527f93"
            ]
        ]
    },
    {
        "id": "a4931875a1d07a25",
        "type": "comment",
        "z": "e59b8a9c7eab3c4f",
        "name": "Init adc enable",
        "info": "Init variable configMsg 1 sec after power up\nIf link is up send msg to ADC over UDP\nif not first toggle of ADC channel enable send \nthe info",
        "x": 1500,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b1630ea3b18e9c40",
        "type": "ui_text_input",
        "z": "e59b8a9c7eab3c4f",
        "name": "mSec delay between Conversions",
        "label": "mSec Between Conversions",
        "tooltip": "ESP32 samples all enabled channels  then repeats 16 times before calculating the average. Then it waits the mSec before repeating.",
        "group": "ea6e9bbec169f855",
        "order": 8,
        "width": "6",
        "height": "2",
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "delay",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 1580,
        "y": 1120,
        "wires": [
            [
                "71d30a4369e5147e"
            ]
        ]
    },
    {
        "id": "c74a542ca4621a2e",
        "type": "ui_text",
        "z": "e59b8a9c7eab3c4f",
        "group": "ea6e9bbec169f855",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Channel Gain TBD",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1670.56005859375,
        "y": 678.6799926757812,
        "wires": []
    },
    {
        "id": "c6563eff1d87d2f5",
        "type": "delay",
        "z": "e59b8a9c7eab3c4f",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 360,
        "wires": [
            [
                "2ce352ba1b84af1a"
            ]
        ]
    },
    {
        "id": "7385cc585d248547",
        "type": "comment",
        "z": "e59b8a9c7eab3c4f",
        "name": "How to delete properties in objects",
        "info": "let obj = global.get(\"Battery\");\ndelete obj.DesiredChargeRate;\nglobal.set(\"Battery\", obj);",
        "x": 680,
        "y": 1120,
        "wires": []
    },
    {
        "id": "eda7d654d57eae8d",
        "type": "comment",
        "z": "e59b8a9c7eab3c4f",
        "name": "Revision history",
        "info": " 6 Feb 2022 revision 1",
        "x": 220,
        "y": 1000,
        "wires": []
    },
    {
        "id": "3cbee75bd8f0599f",
        "type": "inject",
        "z": "e59b8a9c7eab3c4f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 640,
        "wires": [
            [
                "1a4a98e1720ce2e3"
            ]
        ]
    },
    {
        "id": "6ec4a8a486a0934b",
        "type": "inject",
        "z": "e59b8a9c7eab3c4f",
        "name": "ADC chan enable Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "ch1",
        "payload": "100",
        "payloadType": "num",
        "x": 1420,
        "y": 820,
        "wires": [
            [
                "2a2b042d6eb7394c"
            ]
        ]
    },
    {
        "id": "a32423741dfa392e",
        "type": "inject",
        "z": "e59b8a9c7eab3c4f",
        "name": "ADC chan enable Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "ch2",
        "payload": "100",
        "payloadType": "num",
        "x": 1420,
        "y": 880,
        "wires": [
            [
                "01a8e40c51456e21"
            ]
        ]
    },
    {
        "id": "46376c8713dbe313",
        "type": "inject",
        "z": "e59b8a9c7eab3c4f",
        "name": "ADC chan enable Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "ch3",
        "payload": "100",
        "payloadType": "num",
        "x": 1420,
        "y": 940,
        "wires": [
            [
                "32ed194ec4ed7280"
            ]
        ]
    },
    {
        "id": "13adc20d5fcc1470",
        "type": "inject",
        "z": "e59b8a9c7eab3c4f",
        "name": "ADC chan enable Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "ch4",
        "payload": "100",
        "payloadType": "num",
        "x": 1420,
        "y": 1000,
        "wires": [
            [
                "98c3eb3b51bd84bb"
            ]
        ]
    },
    {
        "id": "9e3290d531cff781",
        "type": "inject",
        "z": "e59b8a9c7eab3c4f",
        "name": "ADC chan enable Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "delay",
        "payload": "100",
        "payloadType": "num",
        "x": 1320,
        "y": 1120,
        "wires": [
            [
                "b1630ea3b18e9c40"
            ]
        ]
    },
    {
        "id": "abff888e4b897f0e",
        "type": "comment",
        "z": "e59b8a9c7eab3c4f",
        "name": "Channel 5",
        "info": "Channel 5 is ADC2 ch0 not yet implemented",
        "x": 1620,
        "y": 1060,
        "wires": []
    },
    {
        "id": "d0349c3507f2232a",
        "type": "ui_toast",
        "z": "e59b8a9c7eab3c4f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1010,
        "y": 320,
        "wires": []
    },
    {
        "id": "de29d175d6603292",
        "type": "persist in",
        "z": "e59b8a9c7eab3c4f",
        "name": "Save device1",
        "storageNode": "4fba2c2d9dd00dbc",
        "x": 980,
        "y": 1160,
        "wires": []
    },
    {
        "id": "dae75c3375f20f78",
        "type": "persist in",
        "z": "e59b8a9c7eab3c4f",
        "name": "Save Config1",
        "storageNode": "92d9243d59f819dc",
        "x": 989.9999389648438,
        "y": 1235.5555419921875,
        "wires": []
    },
    {
        "id": "7a97e4bb4b049be2",
        "type": "function",
        "z": "e59b8a9c7eab3c4f",
        "name": "Save data to SD card",
        "func": "// at regular intervals save the data to SD card\nvar device1= flow.get('device1') || {};\nvar configMsg= flow.get('configMsg')|| {};\n\n    msg1={payload:device1};\n    msg2={payload:configMsg};\n    return [msg1,msg2];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1200,
        "wires": [
            [
                "de29d175d6603292"
            ],
            [
                "dae75c3375f20f78"
            ]
        ]
    },
    {
        "id": "43de8d2d6209705b",
        "type": "inject",
        "z": "e59b8a9c7eab3c4f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 470,
        "y": 1200,
        "wires": [
            [
                "7a97e4bb4b049be2"
            ]
        ]
    },
    {
        "id": "90b778247e011b1f",
        "type": "ui_button",
        "z": "e59b8a9c7eab3c4f",
        "name": "",
        "group": "7141e1a989b5bb01",
        "order": 5,
        "width": "3",
        "height": "2",
        "passthru": false,
        "label": "SAVE to SD card",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "save",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 470,
        "y": 1260,
        "wires": [
            [
                "7a97e4bb4b049be2"
            ]
        ]
    },
    {
        "id": "eb554bcab4cda77d",
        "type": "persist out",
        "z": "e59b8a9c7eab3c4f",
        "name": "device1",
        "storageNode": "4fba2c2d9dd00dbc",
        "x": 560,
        "y": 1320,
        "wires": [
            [
                "cbb3acdb471667f6"
            ]
        ]
    },
    {
        "id": "cbb3acdb471667f6",
        "type": "function",
        "z": "e59b8a9c7eab3c4f",
        "name": "Restore data from SD card",
        "func": "// at regular intervals save the data to SD card\nvar device1= flow.get('device1') || {};\n \n    device1=msg.payload;\n    flow.set('device1', device1);\n  ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7cec668782c05853",
        "type": "persist out",
        "z": "e59b8a9c7eab3c4f",
        "name": "config1",
        "storageNode": "92d9243d59f819dc",
        "x": 560,
        "y": 1380,
        "wires": [
            [
                "41180c41369ca011"
            ]
        ]
    },
    {
        "id": "41180c41369ca011",
        "type": "function",
        "z": "e59b8a9c7eab3c4f",
        "name": "Restore data from SD card",
        "func": "// at regular intervals save the data to SD card\nvar configMsg= flow.get('configMsg') || {};\n \n    configMsg=msg.payload;\n    flow.set('configMsg', configMsg);\n  ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1380,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7141e1a989b5bb01",
        "type": "ui_group",
        "name": "Add Devices",
        "tab": "5008791d52cd4ff5",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4a3c9c32.fcb034",
        "type": "ui_group",
        "name": "Home",
        "tab": "d0f84149.922d7",
        "order": 1,
        "disp": false,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ea6e9bbec169f855",
        "type": "ui_group",
        "name": "Settings",
        "tab": "b7f11c02414f1499",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "54d0f132c980d931",
        "type": "ui_group",
        "name": "Documentation",
        "tab": "795ec6b3dcfb031a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4fba2c2d9dd00dbc",
        "type": "persist-store",
        "filename": "~/.node-red/device1.json",
        "interval": "86400"
    },
    {
        "id": "92d9243d59f819dc",
        "type": "persist-store",
        "filename": "~/.node-red/config1.json",
        "interval": "86400"
    },
    {
        "id": "5008791d52cd4ff5",
        "type": "ui_tab",
        "name": "Add devices",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d0f84149.922d7",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b7f11c02414f1499",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "795ec6b3dcfb031a",
        "type": "ui_tab",
        "name": "Documentation",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]
